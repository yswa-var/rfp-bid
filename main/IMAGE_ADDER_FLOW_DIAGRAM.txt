╔══════════════════════════════════════════════════════════════════════════════╗
║                    IMAGE ADDER NODE - COMPLETE FLOW DIAGRAM                  ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│ 1. USER INPUT                                                                │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  User: "Add images to the document"                                         │
│        "Insert pictures into sections"                                      │
│        "Place images in appropriate places"                                 │
│                                                                              │
└────────────────────────────────┬─────────────────────────────────────────────┘
                                 │
                                 ▼
┌──────────────────────────────────────────────────────────────────────────────┐
│ 2. SUPERVISOR AGENT                                                          │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  📋 Analyzes user intent                                                    │
│  🔍 Checks routing priority                                                 │
│  🎯 Routes to appropriate agent                                             │
│                                                                              │
└────────────────────────────────┬─────────────────────────────────────────────┘
                                 │
                                 ▼
┌──────────────────────────────────────────────────────────────────────────────┐
│ 3. ROUTER (Priority 2)                                                       │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  Keywords Detected:                                                          │
│  ✓ "add images"      ✓ "insert images"    ✓ "place images"                │
│  ✓ "add image"       ✓ "insert image"     ✓ "place image"                 │
│  ✓ "add pictures"    ✓ "insert pictures"  ✓ "image_adder"                 │
│                                                                              │
│  Decision: → "image_adder"                                                  │
│                                                                              │
└────────────────────────────────┬─────────────────────────────────────────────┘
                                 │
                                 ▼
╔══════════════════════════════════════════════════════════════════════════════╗
║                        IMAGE ADDER NODE                                      ║
╠══════════════════════════════════════════════════════════════════════════════╣
║                                                                              ║
║  ┌────────────────────────────────────────────────────────────────────┐    ║
║  │ STEP 1: GET DOCUMENT STRUCTURE                                     │    ║
║  ├────────────────────────────────────────────────────────────────────┤    ║
║  │                                                                    │    ║
║  │  📄 docx_manager = get_docx_manager()                             │    ║
║  │  📑 await docx_manager._ensure_index_loaded()                     │    ║
║  │  📊 outline = docx_manager.get_outline()                          │    ║
║  │                                                                    │    ║
║  │  Result: List of headings with anchors                            │    ║
║  │  [                                                                 │    ║
║  │    {'text': 'Introduction', 'anchor': [...], 'level': 1},        │    ║
║  │    {'text': 'Architecture', 'anchor': [...], 'level': 1},        │    ║
║  │    {'text': 'Security', 'anchor': [...], 'level': 2},            │    ║
║  │    ...                                                             │    ║
║  │  ]                                                                 │    ║
║  │                                                                    │    ║
║  └────────────────────────────┬───────────────────────────────────────┘    ║
║                                │                                            ║
║                                ▼                                            ║
║  ┌────────────────────────────────────────────────────────────────────┐    ║
║  │ STEP 2: LOAD IMAGE METADATA                                        │    ║
║  ├────────────────────────────────────────────────────────────────────┤    ║
║  │                                                                    │    ║
║  │  📂 csv_path = "main/images/image_name_dicription.csv"            │    ║
║  │  🖼️  images_dir = "main/images/"                                   │    ║
║  │                                                                    │    ║
║  │  Read CSV and validate:                                            │    ║
║  │  [                                                                 │    ║
║  │    {                                                               │    ║
║  │      'name': 'screenshot1.png',                                    │    ║
║  │      'description': 'System architecture diagram',                 │    ║
║  │      'path': '/full/path/to/screenshot1.png'                      │    ║
║  │    },                                                              │    ║
║  │    ...                                                             │    ║
║  │  ]                                                                 │    ║
║  │                                                                    │    ║
║  └────────────────────────────┬───────────────────────────────────────┘    ║
║                                │                                            ║
║                                ▼                                            ║
║  ┌────────────────────────────────────────────────────────────────────┐    ║
║  │ STEP 3: LLM-POWERED SEMANTIC MATCHING                              │    ║
║  ├────────────────────────────────────────────────────────────────────┤    ║
║  │                                                                    │    ║
║  │  🤖 LLM: ChatOpenAI (gpt-4o-mini, temp=0.3)                       │    ║
║  │                                                                    │    ║
║  │  Input to LLM:                                                     │    ║
║  │  ┌──────────────────────────────────────────────────────────┐    │    ║
║  │  │ DOCUMENT OUTLINE:                                        │    │    ║
║  │  │ Section 1: Introduction (Level 1)                        │    │    ║
║  │  │ Section 2: Technical Architecture (Level 1)              │    │    ║
║  │  │ Section 3: Security Overview (Level 2)                   │    │    ║
║  │  │ ...                                                       │    │    ║
║  │  │                                                           │    │    ║
║  │  │ AVAILABLE IMAGES:                                        │    │    ║
║  │  │ Image 1: screenshot1.png - System architecture diagram   │    │    ║
║  │  │ Image 2: screenshot2.png - Security infrastructure       │    │    ║
║  │  │ ...                                                       │    │    ║
║  │  └──────────────────────────────────────────────────────────┘    │    ║
║  │                                                                    │    ║
║  │  LLM Response:                                                     │    ║
║  │  screenshot1.png -> 2                                              │    ║
║  │  screenshot2.png -> 3                                              │    ║
║  │  ...                                                               │    ║
║  │                                                                    │    ║
║  │  Parsed Matches:                                                   │    ║
║  │  [                                                                 │    ║
║  │    {                                                               │    ║
║  │      'image': {...},                                               │    ║
║  │      'section_index': 1,                                           │    ║
║  │      'section_heading': {'text': 'Technical Architecture', ...}   │    ║
║  │    },                                                              │    ║
║  │    ...                                                             │    ║
║  │  ]                                                                 │    ║
║  │                                                                    │    ║
║  └────────────────────────────┬───────────────────────────────────────┘    ║
║                                │                                            ║
║                                ▼                                            ║
║  ┌────────────────────────────────────────────────────────────────────┐    ║
║  │ STEP 4: INSERT IMAGES INTO DOCUMENT                                │    ║
║  ├────────────────────────────────────────────────────────────────────┤    ║
║  │                                                                    │    ║
║  │  For each match:                                                   │    ║
║  │                                                                    │    ║
║  │    success = docx_manager.insert_image(                           │    ║
║  │        image_path=image_info['path'],                             │    ║
║  │        width=5.0,                    # 5 inches                    │    ║
║  │        after_anchor=section['anchor'],                            │    ║
║  │        position="after"              # After heading              │    ║
║  │    )                                                               │    ║
║  │                                                                    │    ║
║  │  Track:                                                            │    ║
║  │  - inserted_count = 3                                              │    ║
║  │  - errors = []                                                     │    ║
║  │                                                                    │    ║
║  └────────────────────────────┬───────────────────────────────────────┘    ║
║                                │                                            ║
║                                ▼                                            ║
║  ┌────────────────────────────────────────────────────────────────────┐    ║
║  │ STEP 5: PREPARE AND RETURN RESULTS                                 │    ║
║  ├────────────────────────────────────────────────────────────────────┤    ║
║  │                                                                    │    ║
║  │  ✅ Image Addition Complete!                                       │    ║
║  │                                                                    │    ║
║  │  Successfully inserted 3 out of 3 matched images.                  │    ║
║  │                                                                    │    ║
║  │  Inserted images:                                                  │    ║
║  │    • screenshot1.png → after 'Technical Architecture'             │    ║
║  │    • screenshot2.png → after 'Security Overview'                  │    ║
║  │    • screenshot3.png → after 'Project Timeline'                   │    ║
║  │                                                                    │    ║
║  └────────────────────────────────────────────────────────────────────┘    ║
║                                                                              ║
╚════════════════════════════════┬═════════════════════════════════════════════╝
                                 │
                                 ▼
┌──────────────────────────────────────────────────────────────────────────────┐
│ 4. RETURN TO USER                                                            │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  AIMessage(                                                                  │
│    content="✅ Image Addition Complete! ...",                               │
│    name="image_adder"                                                       │
│  )                                                                           │
│                                                                              │
└────────────────────────────────┬─────────────────────────────────────────────┘
                                 │
                                 ▼
┌──────────────────────────────────────────────────────────────────────────────┐
│ 5. END                                                                       │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  ✓ Images inserted into document                                            │
│  ✓ Document updated and saved                                               │
│  ✓ Index refreshed                                                           │
│  ✓ User notified of results                                                  │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════════
                             ERROR HANDLING FLOW
═══════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────┐
│   Try All Operations        │
└──────────┬──────────────────┘
           │
           ├─────────────┬──────────────────────────────────────┐
           │             │                                      │
No Headings?      CSV Not Found?                      No Images?
     ▼                  ▼                                      ▼
  Return            Return                                 Return
  Error             Error                                  Error
  Message           Message                                Message
     │                  │                                      │
     └──────────────────┴──────────────────────────────────────┘
                        │
                        ▼
              ┌─────────────────┐
              │ Insertion Error? │
              └────────┬─────────┘
                       │
                  Log & Continue
                       │
                       ▼
              ┌─────────────────┐
              │  Report Errors  │
              │  with Results   │
              └─────────────────┘


═══════════════════════════════════════════════════════════════════════════════
                         GRAPH INTEGRATION DIAGRAM
═══════════════════════════════════════════════════════════════════════════════

                            ┌───────────┐
                            │   START   │
                            └─────┬─────┘
                                  │
                                  ▼
                        ┌──────────────────┐
                        │   Supervisor     │
                        └────────┬─────────┘
                                 │
                ┌────────────────┼────────────────┬──────────────┐
                │                │                │              │
                ▼                ▼                ▼              ▼
        ┌──────────────┐ ┌──────────────┐ ┌──────────────┐ ┌──────────────┐
        │  pdf_parser  │ │ docx_agent   │ │ general_asst │ │ image_adder  │◄─┐
        └──────┬───────┘ └──────┬───────┘ └──────┬───────┘ └──────┬───────┘  │
               │                │                │                │           │
               ▼                ▼                ▼                ▼           │
        ┌──────────────┐       END              END              END     SEPARATE
        │  create_rag  │                                                   PATH
        └──────┬───────┘                                                      │
               │                                                              │
               ▼                                                              │
              END                                                             ┘


═══════════════════════════════════════════════════════════════════════════════
                              FILE STRUCTURE
═══════════════════════════════════════════════════════════════════════════════

rfp-bid/main/
│
├── src/agent/
│   ├── image_adder_node.py         ← 🆕 NODE IMPLEMENTATION
│   ├── graph.py                    ← ✏️  UPDATED (added node + edges)
│   ├── router.py                   ← ✏️  UPDATED (added routing)
│   └── ...
│
├── images/
│   ├── image_name_dicription.csv   ← ✏️  UPDATED (added descriptions)
│   ├── screenshot1.png
│   ├── screenshot2.png
│   └── ...
│
├── test_image_adder.py             ← 🆕 TEST SCRIPT
├── IMAGE_ADDER_README.md           ← 🆕 FULL DOCUMENTATION
├── IMAGE_ADDER_ARCHITECTURE.md     ← 🆕 ARCHITECTURE DETAILS
├── IMAGE_ADDER_QUICKSTART.md       ← 🆕 QUICK START GUIDE
├── IMAGE_ADDER_IMPLEMENTATION_SUMMARY.md  ← 🆕 SUMMARY
└── IMAGE_ADDER_FLOW_DIAGRAM.txt    ← 🆕 THIS FILE


═══════════════════════════════════════════════════════════════════════════════
                              KEY FEATURES
═══════════════════════════════════════════════════════════════════════════════

✅ Get document headings using docx_manager.get_outline()
✅ Read image descriptions from CSV file
✅ LLM-powered semantic matching (GPT-4o-mini)
✅ Insert images using docx_manager.insert_image()
✅ Integrated as separate path in graph
✅ Proper edge connections (supervisor → image_adder → END)
✅ Router keywords: "add images", "insert images", etc.
✅ Comprehensive error handling
✅ Detailed result reporting
✅ No linter errors
✅ Full documentation
✅ Test suite provided


═══════════════════════════════════════════════════════════════════════════════
                         USAGE EXAMPLES
═══════════════════════════════════════════════════════════════════════════════

Example 1: Basic Usage
──────────────────────
User: "Add images to the document"
Bot: "✅ Image Addition Complete! Successfully inserted 3 out of 3 matched images..."

Example 2: Explicit Agent
──────────────────────────
User: "Use image_adder to insert pictures"
Bot: [Routes directly to image_adder node]

Example 3: Alternative Phrasing
────────────────────────────────
User: "Please place images in appropriate sections"
Bot: [Triggers image_adder via routing keywords]


═══════════════════════════════════════════════════════════════════════════════
                              STATUS
═══════════════════════════════════════════════════════════════════════════════

Implementation: ✅ COMPLETE
Integration:    ✅ COMPLETE
Documentation:  ✅ COMPLETE
Testing:        ✅ COMPLETE
Linter:         ✅ NO ERRORS

Ready for Production: ✅ YES

